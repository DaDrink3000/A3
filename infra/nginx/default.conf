# server {
#   listen 80;
#   server_name localhost;
#   return 301 https://$host$request_uri;
# }

# server {
#   listen 443 ssl http2;
#   server_name localhost;

#   ssl_certificate     /etc/nginx/certs/fullchain.pem;
#   ssl_certificate_key /etc/nginx/certs/privkey.pem;

#   # TLS Protocols
#   ssl_protocols TLSv1.3 TLSv1.2;
#   ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
#   ssl_prefer_server_ciphers on;

#   # --- Security Headers ---
#   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
#   add_header X-Frame-Options "DENY" always;
#   add_header X-Content-Type-Options "nosniff" always;
#   add_header X-XSS-Protection "1; mode=block" always;
#   add_header Referrer-Policy "no-referrer" always;
#   add_header Permissions-Policy "geolocation=(), camera=(), microphone=(), payment=(), usb=()" always;
#   add_header Expect-CT "max-age=86400, enforce" always;
#   add_header Content-Security-Policy "default-src 'self'; object-src 'none'; frame-ancestors 'none'; base-uri 'self';" always;

#   location / {
#     proxy_set_header Host $host;
#     proxy_set_header X-Forwarded-Proto https;
#     proxy_pass http://app:8000;
#   }
# }


# --- Redirect HTTP to HTTPS ---
server {
  listen 80;
  server_name localhost;
  return 301 https://$host$request_uri;
}

# --- HTTPS / Load Balanced Server ---
server {
  listen 443 ssl http2;
  server_name localhost;

  ssl_certificate     /etc/nginx/certs/fullchain.pem;
  ssl_certificate_key /etc/nginx/certs/privkey.pem;

  # TLS Protocols and Ciphers
  ssl_protocols TLSv1.3 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
  ssl_prefer_server_ciphers on;

  # --- Security Headers ---
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
  add_header X-Frame-Options "DENY" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Referrer-Policy "no-referrer" always;
  add_header Permissions-Policy "geolocation=(), camera=(), microphone=(), payment=(), usb=()" always;
  add_header Expect-CT "max-age=86400, enforce" always;
  add_header Content-Security-Policy "default-src 'self'; object-src 'none'; frame-ancestors 'none'; base-uri 'self';" always;

  # --- Load Balancer Upstream Definition ---
  upstream flask_backend {
    # Two Flask app replicas
    server app1:8000 max_fails=3 fail_timeout=30s;
    server app2:8000 max_fails=3 fail_timeout=30s;

    # Optional: use least_conn or round robin (default)
    least_conn;
  }

  # --- Health Check Endpoint ---
  location /healthz {
    proxy_pass http://flask_backend/healthz;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto https;
  }

  # --- Proxy All Other Requests ---
  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_pass http://flask_backend;
    proxy_connect_timeout 5s;
    proxy_read_timeout 60s;
  }
}
