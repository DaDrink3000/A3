# server {
#   listen 80;
#   server_name localhost;
#   return 301 https://$host$request_uri;
# }

# server {
#   listen 443 ssl http2;
#   server_name localhost;

#   ssl_certificate     /etc/nginx/certs/fullchain.pem;
#   ssl_certificate_key /etc/nginx/certs/privkey.pem;

#   # TLS Protocols
#   ssl_protocols TLSv1.3 TLSv1.2;
#   ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
#   ssl_prefer_server_ciphers on;

#   # --- Security Headers ---
#   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
#   add_header X-Frame-Options "DENY" always;
#   add_header X-Content-Type-Options "nosniff" always;
#   add_header X-XSS-Protection "1; mode=block" always;
#   add_header Referrer-Policy "no-referrer" always;
#   add_header Permissions-Policy "geolocation=(), camera=(), microphone=(), payment=(), usb=()" always;
#   add_header Expect-CT "max-age=86400, enforce" always;
#   add_header Content-Security-Policy "default-src 'self'; object-src 'none'; frame-ancestors 'none'; base-uri 'self';" always;

#   location / {
#     proxy_set_header Host $host;
#     proxy_set_header X-Forwarded-Proto https;
#     proxy_pass http://app:8000;
#   }
# }

# ---- Upstream for Flask replicas (backend) ----
upstream backend_pool {
    least_conn;
    server app1:8000 max_fails=3 fail_timeout=30s;
    server app2:8000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# ---- Optional: HTTP -> HTTPS redirect ----
server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
}

# ---- HTTPS server ----
server {
    listen 443 ssl;
    http2 on;
    server_name localhost;

    ssl_certificate     /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    # TLS + security headers (as you had)
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
    ssl_prefer_server_ciphers on;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header Permissions-Policy "geolocation=(), camera=(), microphone=(), payment=(), usb=()" always;
    add_header Expect-CT "max-age=86400, enforce" always;
    add_header Content-Security-Policy "default-src 'self'; object-src 'none'; frame-ancestors 'none'; base-uri 'self';" always;

    # ---- Health check (proxied to backend) ----
    location /healthz {
        proxy_pass http://backend_pool/healthz;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto https;
    }

    # ---- Backend API ----
    # All API calls go to Flask. Keep the trailing slash style consistent.
    location /api/ {
        proxy_pass http://backend_pool/;   # strips /api/ if your Flask app mounts at root
        # If your Flask endpoints include the /api prefix internally, use:
        # proxy_pass http://backend_pool;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_read_timeout 60s;
        proxy_connect_timeout 5s;
    }

    # ---- Frontend (Node) ----
    location / {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;

        # Websocket / HMR support for dev servers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 60s;
        proxy_connect_timeout 5s;
    }
}
